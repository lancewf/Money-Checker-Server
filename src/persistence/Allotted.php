<?php

require_once 'persistence/om/BaseAllotted.php';


/**
 * Skeleton subclass for representing a row from the 'allotted' table.
 *
 * a user to the system
 *
 * This class was autogenerated by Propel on:
 *
 * Mon Mar  8 23:25:10 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    persistence
 */
class Allotted extends BaseAllotted {
    public function toJson()
    {
        $array_store = array ();
    
        $array_store["key"] = $this->getKey();
        $array_store["amount"] = $this->getAmount();
        $array_store["billtypekey"] = $this->getBilltypeKey();

        $array_store["startdayofmonth"] = $this->getStartDayOfMonth();
        $array_store["startmonth"] = $this->getStartMonth();
        $array_store["startyear"] = $this->getStartYear();
        
        $array_store["enddayofmonth"] = $this->getEndDayOfMonth();
        $array_store["endmonth"] = $this->getEndMonth();
        $array_store["endyear"] = $this->getEndYear();
    
        return json_encode($array_store);
    }
    
	public function getStartDateObject()
	{
		$date = strtotime($this->getStartDate());
		
		return $date;
	}
	
	public function getEndDateObject()
	{
		$date = strtotime($this->getEndDate());
		
		return $date;
	}
    
    public function getEndYear()
    {
    	$date = $this->getEndDateObject();
		
		return (int)date("Y",$date);
    }
    
	public function getEndDayOfMonth()
	{
		$date = $this->getEndDateObject();
		
		return (int)date("j",$date);
	}

	public function getEndMonth()
	{
		$date = $this->getEndDateObject();
		
		return (int)date("n",$date);
	}
	
    public function getStartYear()
    {
    	$date = $this->getStartDateObject();
		
		return (int)date("Y",$date);
    }
    
	public function getStartDayOfMonth()
	{
		$date = $this->getStartDateObject();
		
		return (int)date("j",$date);
	}

	public function getStartMonth()
	{
		$date = $this->getStartDateObject();
		
		return (int)date("n",$date);
	}
} // Allotted
